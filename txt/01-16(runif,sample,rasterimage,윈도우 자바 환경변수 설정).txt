```{r}

graphics.off()
par(mfrow=c(2, 5)) 
hosdata<- hos[,!colnames(hos) %in% '표시과목']
hosdata<- as.matrix(hosdata)

for(i in 1:length(colnames(hosdata))) { 
  barplot(as.numeric(hosdata[,i])/10,
          names.arg = hos$표시과목,
          ylab = '병원 수(단위 : 10개)',
          col = rainbow(length(hos$표시과목)),
          ylim = c(0,(max(hosdata)+50)/10),
          cex.names = 0.5,
          main = paste(colnames(hosdata)[i],"병원현황"),  
          cex.axis = 0.7,
          las= 2,
          border = "white")
abline(h=seq(0,(max(hosdata)+50)/10,5),lty=1,lwd= 0.05) }




```

[문제169] 2016년_서울_주요구별_병원현황.csv file을 읽어 들인후 구별 진료과목에 해당하는 병원수를 
          막대형 그래프로 만드세요. 
 	  단 막대높이는 10개당 1개로 만드시고 막대그래프 프로그램은 한개를 가지고 모든 구별 막대그래프가 생성되도록 만드세요.
 	  
graphics.off()
par(mfrow=c(2, 5)) 
hosdata<- hos[,!colnames(hos) %in% '표시과목']
hosdata<- as.matrix(hosdata)

for(i in 1:length(colnames(hosdata))) { 
  barplot(as.numeric(hosdata[,i])/10,
          names.arg = hos$표시과목,
          ylab = '병원 수(단위 : 10개)',
          col = rainbow(length(hos$표시과목)),
          ylim = c(0,(max(hosdata)+50)/10),
          cex.names = 0.5,
          main = paste(colnames(hosdata)[i],"병원현황"),  
          cex.axis = 0.7,
          las= 2,
          border = "white")
abline(h=seq(0,(max(hosdata)+50)/10,5),lty=1,lwd= 0.05) }
```{r}
myani<- function(){
                    n<- ani.options("nmax")
                    x<- sample(1:n)
                    y<- sample(1:n)
                    
                    for (i in 1:n){plot(x[i],y[i],cex=3,col="red",pch=20,
                                        lwd=2,ylim=c(0,50),xlim=c(0,50))
                                   ani.pause()
                                   }
                    }
                    
myani()

runif(10,0,1)
runif(5)

myani2<- function(){
                      for(i in 1:10){
                                      y<- runif(5,1,2)
                                      barplot(y,
                                              ylim = c(0,2),
                                              col=rainbow(5))
                                      ani.pause(5)
                                    }
                    }

graphics.off()
myani2()


myani3<- function(){
                    for(i in 10:0){
                                    plot.new()
                                    rect(0,0,1,1,col="gold")
                                    s<- i - 1
                                    text(0.5,0.5,i,cex=s,col=rgb(0,0,1))
                                    ani.pause()
                                  }
                  }
myani3()


plot.new()
text(0.5,0.55,"방송이 종료되었습니다.",cex=3,col="black")
text(0.5,0.35,"시청해주셔서 감사합니다.",cex=1,col="black")


help("text")

name = c("장", "오", "백")
myani3<- function(){
                    for(i in name){
                                    plot.new()
                                    rect(0,0,1,1,col="gold")
                                    text(0.5,0.5,i,cex=3,col=rgb(0,0,1))
                                    ani.pause()
                                  }
                  }
myani3()


```
#animation

myani<- function(){
                    n<- ani.options("nmax")  
                    x<- sample(1:n)
                    y<- sample(1:n)
                    
                    for (i in 1:n){plot(x[i],y[i],cex=3,col="red",pch=20,
                                        lwd=2,ylim=c(0,50),xlim=c(0,50))
                                   ani.pause()
                                   }
                    }
                    
myani()

ani.options("nmax")  
    # ani.options 을 설정, 조회 함수
    # nmax : animation의 프레임을 만들기 위한 반복수 기본값=50
    # interval : animation의 시간 간격(초단위) 기본값= 1초

ani.pause() : 주어진 시간동안에 대기하고 현재 화면을 지운다.
ani.pause("interval")

sample(1:10) 1~10까지 random하게 생성

##난수
runif(n,min,max)
n : 생성할 난수의 수
min,max : 난수의 범위

runif(10,0,1)
runif(5) #정규분포를 따르는 난수를 생성

myani2<- function(){
                      for(i in 1:10){
                                      y<- runif(5,1,2)
                                      barplot(y,
                                              ylim = c(0,2),
                                              col=rainbow(5))
                                      ani.pause(5)
                                    }
                    }

graphics.off()
myani2()  #그래프가 5초마다 움직이게 되어있는데 노트창에서는 한꺼번에 출력된다.


myani3<- function(){
  for(i in 10:0){
    plot.new()   #plot.new() : 그래프를 표현하기 위해서 적는 함수 (도화지를 만든다고 생각하면된다.)
    rect(0,0,1,1,col="gold")   # 렉탱글 4각형을 그리는 함수
    s<- i-1
    text(0.5,0.5,i,cex=s,col=rgb(0,0,1))   #rgb : 빛의 3원색 (RED,GREEN,BLUE)
    ani,pause()
  }
}
myani3()

plot.new()  # 새로운 그래픽 프레임 생성
rect(0,0,1,1)  # plot 영역 내부의 좌표에 사각형 그리기 rect(x1(left), y1(bottom), x2(right), y2(top))



plot.new()
text(0.5,0.5,"대한민국",cex=10,col="red")

```{r}
library(jpeg)

for(i in 1:4) {
  img<- paste("c:/r/",i,".jpg",sep="")
  img<- readJPEG(img)
  
  plot.new()
  rect(0,0,1,1,col = "white", border = "white")
  
  rasterImage(img,0,0,1,1)
  ani.pause()
}

raster

```
library(jpeg)

for(i in 1:4) {
  img<- paste("c:/r/",i,".jpg",sep="")
  img<- rdadJPEG(img)
  
  plot.new()
  rect(0,0,1,1,col = "white", border = "white")
  
  rasterimage(img,0,0,1,1)
  ani.pause()
}

# 화면에 이미지 출력해주는 함수
rasterimage(img,xleft,ybottom,xright,ytop)
xleft : X축 왼쪽  
ybottom : Y축 아래쪽
xright : X축 오른쪽
ytop : Y축 위쪽


```{r}
x<- c('A팀','B팀','C팀','D팀','E팀')
y<- c(90,45,70,67,85)

jpeg('c:/r/1.jpg')
barplot(y,
        main = "영업팀별 매출액",
        ylim = c(0,100),
        names.arg = x,
        col = heat.colors(length(x)),
        ylab = "매출액(억)")
dev.off()


jpeg('c:/r/2.jpg')
pie(y,
    main = "영업팀별 매출액",
    labels = paste(x,y,"억"))
dev.off()



jpeg('c:/r/3.jpg')
pie3D(y,
      main = "영업팀별 매출액",
      labels = paste(x,y,"억"),
      explod = 0.1,
      labelcex = 1)
dev.off()



for(i in 1:3) {
  img<- paste("c:/r/",i,".jpg",sep="")
  img<- readJPEG(img)
  
  plot.new()
  rect(0,0,1,1,col = "white",border = "white")
  
  rasterImage(img,0,0,1,1)
  ani.pause()
}


```
[문제170] 모기업의 영업팀은 'A팀','B팀','C팀','D팀','E팀'있습니다.
	  영업팀별 영업 매출액은 90,45,70,67,85 있습니다.
	  이자료를 이용해서 barplot, pie, pie3D 그래프를 만드세요.
	  각 그래프를 jpg파일로 저장한 후 이 파일을 애니메이션으로 출력해주세요.

#내꺼
x<- c('A팀','B팀','C팀','D팀','E팀')
y<- c(90,45,70,67,85)

jpeg('c:/r/1.jpg')
barplot(y,
        main = "영업팀별 매출액",
        ylim = c(0,100),
        names.arg = x,
        col = heat.colors(length(x)),
        ylab = "매출액(억)")
dev.off()


jpeg('c:/r/2.jpg')
pie(y,
    main = "영업팀별 매출액",
    labels = paste(x,y,"억"))
dev.off()



jpeg('c:/r/3.jpg')
pie3D(y,
      main = "영업팀별 매출액",
      labels = paste(x,y,"억"),
      explod = 0.1,
      labelcex = 1)
dev.off()



for(i in 1:3) {
  img<- paste("c:/r/",i,".jpg",sep="")
  img<- readJPEG(img)
  
  plot.new()
  rect(0,0,1,1,col = "white",border = "white")
  
  rasterImage(img,0,0,1,1)
  ani.pause()
}


#쌤꺼
x<-c('A팀','B팀','C팀','D팀','E팀')
y<-c(90,45,70,67,85)


library(jpeg)

jpeg('c:/R/ex170_1.jpg',width=400,height=300,pointsize=12)

barplot(y,names.arg=x,xlab='팀명',ylab='영업 매출액',col=rainbow(length(x)),ylim=c(0,100),main='영업매출액 BARPLOT',sub='2017년도')
dev.off()


jpeg('c:/R/ex170_2.jpg',width=400,height=300,pointsize=12)
p<-round(y/sum(y)*100)
p
pie(y,labels=paste(x,p,'%'),main='영업매출액 pie차트',col=rainbow(length(y)))
dev.off()


library('plotrix')
jpeg('c:/R/ex170_3.jpg',width=400,height=300,pointsize=12)
pie3D(y,labels=paste(x,p,'%'),main='영업매출액 pie3D차트',col=rainbow(length(y)),explode=0.1,labelcex=1.5)
dev.off()



library(jpeg)

for(i in 1:3){
  img<-paste("c:/R/",'ex170_',i,".jpg",sep="")
  img<-readJPEG(img)
  
  plot.new() 
  rect(0,0,1,1, col="white", border="white")    
  rasterImage(img, 0,0,1,1) 
  
  ani.pause() # 잠깐 대기한후 화면지우고 다시 출력
}
```{r}
 	  
graphics.off()
par(mfrow=c(2, 5)) 
hosdata<- hos[,!colnames(hos) %in% '표시과목']
hosdata<- as.matrix(hosdata)

for(i in 1:length(colnames(hosdata))) {
  jpeg(paste("c:/r/",colnames(hosdata)[i],".jpg",sep = ""))
       
  barplot(as.numeric(hosdata[,i])/10,
          names.arg = hos$표시과목,
          ylab = '병원 수(단위 : 10개)',
          col = rainbow(length(hos$표시과목)),
          ylim = c(0,(max(hosdata)+50)/10),
          cex.names = 0.5,
          main = paste(colnames(hosdata)[i],"병원현황"),  
          cex.axis = 0.7,
          las= 2,
          border = "white")
abline(h=seq(0,(max(hosdata)+50)/10,5),lty=1,lwd= 0.05) 
dev.off()
}



for(i in 1:length(colnames(hosdata))) {
  img<- paste("c:/r/",colnames(hosdata)[i],".jpg",sep="")
  img<- readJPEG(img)
  
  plot.new()
  rect(0,0,1,1,col = "white",border = "white")
  
  rasterImage(img,0,0,1,1)
  ani.pause()
}


```

  
[문제171] 문제169번을 수행하면서 구이름.jpg형식으로 파일이 생성하도록 한후
	  구이름.jpg를 이용해서 애니메이션을 수행하세요.

#내꺼
graphics.off()
par(mfrow=c(2, 5)) 
hosdata<- hos[,!colnames(hos) %in% '표시과목']
hosdata<- as.matrix(hosdata)


for(i in 1:length(colnames(hosdata))) {
  jpeg(paste("c:/r/",colnames(hosdata)[i],".jpg",sep = ""))
       
  barplot(as.numeric(hosdata[,i])/10,
          names.arg = hos$표시과목,
          ylab = '병원 수(단위 : 10개)',
          col = rainbow(length(hos$표시과목)),
          ylim = c(0,(max(hosdata)+50)/10),
          cex.names = 0.5,
          main = paste(colnames(hosdata)[i],"병원현황"),  
          cex.axis = 0.7,
          las= 2,
          border = "white")
abline(h=seq(0,(max(hosdata)+50)/10,5),lty=1,lwd= 0.05) 
dev.off()
}



for(i in 1:length(colnames(hosdata))) {
  img<- paste("c:/r/",colnames(hosdata)[i],".jpg",sep="")
  img<- readJPEG(img)
  
  plot.new()
  rect(0,0,1,1,col = "white",border = "white")
  
  rasterImage(img,0,0,1,1)
  ani.pause()
}

#쌤꺼

library(jpeg)

data1 <- read.csv("c:/r/2016년_서울_주요구별_병원현황.csv" , header=T)
gu <- colnames(data1[2:11])
par(mfrow=c(2,5))

for(i in 1:10){
  jpeg(paste('c:/R/',gu[i],'.jpg',sep=""),width=400,height=300,pointsize=12)
  barplot(data1[1:9,i+1] * 0.1 ,
          main=paste(gu[i],"병원현황"),
          axes=F,
          ylab="병원수(단위:10개)",
          xlab="", 
          cex.names=0.85,
          las=2,
          ylim=c(0,40), 
          col=rainbow(length(data1$표시과목)), 
          border="white",
          names.arg=data1$표시과목)
  
  axis(2,ylim=seq(0,40,10))
  abline(h=seq(0,40,5),lty=2)
  dev.off()
}


graphics.off()



for (i in gu) {
  img <- paste("c:/R/",i,".jpg",sep="")
  img <- readJPEG(img)
  plot.new()
  rasterImage(img,0,0,1,1)
  ani.pause()
}

```{r}
install.packages("png")
library(png)
readPNG(img)


install.packages("RJDBC")
library(RJDBC)

jdbcDriver <- JDBC(driverClass="oracle.jdbc.OracleDriver", classPath="C:/r/ojdbc6.jar")
conn <- dbConnect(jdbcDriver, "jdbc:oracle:thin:@localhost:1521/xe", "hr",  "hr") 

emp <- dbGetQuery(conn, "select * from employees")

dept <- dbGetQuery(conn, "select * from departments")

class(emp)


dbGetQuery(conn, "select e.employee_id, e.last_name, e.department_id,d.department_name from employees e, departments d where d.department_id = e.department_id")

dbGetQuery(conn, "select mod(salary,10) from employees")

dbGetQuery(conn, "select e.*, d.*, l.*
from employees e, departments d, locations l
where e.department_id = d.department_id
  and d.location_id = l.location_id
  and e.last_name = 'King'
           ")



```

#PNG
install.packages("png")
library(png)
readPNG(img)



##윈도우 자바 환경변수 설정


<cmd>실행
where /R c:\ javac.exe
없다고 뜬다.


# 1> 압축파일깔고 실행(jdk-8u102-windows-x64.exe)

# 2>
      install.packages("RJDBC")
      library(RJDBC)
      
##환경을 구성해주는 프로그램이 깔려있다.
jdbcDriver <- JDBC(driverClass="oracle.jdbc.OracleDriver", classPath="C:/r/ojdbc6.jar")

#oracle 개인피씨니깐 현장에서는 localhost만 변경하면 된다/xe버전에 접속/1521포트이용/유저이름,비밀번호
##conn이라는 접속 환경을 만들어준것이고.
conn <- dbConnect(jdbcDriver, "jdbc:oracle:thin:@localhost:1521/xe", "hr",  "hr")  
##그 접속환경을 이용하여 dbGetQuery라는 함수를 이용하여 접속환경과 SQL문장을 사용하는것이다.
emp <- dbGetQuery(conn, "select * from employees")

dept <- dbGetQuery(conn, "select * from departments")

 
> class(emp)
[1] "data.frame"


```{r}

library(RJDBC)
jdbcDriver <- JDBC(driverClass="oracle.jdbc.OracleDriver", classPath="C:/r/ojdbc6.jar")
conn <- dbConnect(jdbcDriver, "jdbc:oracle:thin:@localhost:1521/xe", "hr",  "hr")



df <- dbGetQuery(conn, "SELECT nvl(department_name,'소속부서(x)') dept_name, count(*) cnt
                        FROM employees e , departments d 
                        WHERE e.department_id = d.department_id(+)
                        GROUP BY nvl(department_name,'소속부서(x)')")

bp <- barplot(df$CNT,
              names.arg=df$DEPT_NAME,
              main='부서별 사원 수',
              col=terrain.colors(length(df$DEPT_NAME)),
              ylab='사원수(명)',
              ylim=c(0,50),
              las=2)

text(x=bp, y=df$CNT, labels=df$CNT, pos=3)





df <- dbGetQuery(conn, "SELECT nvl(department_name,'소속부서(x)') dept_name, count(*) cnt
                        FROM employees e LEFT OUTER JOIN departments d 
                        ON e.department_id=d.department_id
                        GROUP BY nvl(department_name,'소속부서(x)')
                        ORDER BY cnt DESC")

bp <- barplot(df$CNT,
              names.arg=df$DEPT_NAME,
              main='부서별 사원 수',
              col=terrain.colors(length(df$DEPT_NAME)),
              ylab='사원수(명)',
              ylim=c(0,50),
              las=2)
text(x=bp, y=df$CNT, labels=df$CNT, pos=3)



emp <- dbGetQuery(conn, "select * from employees")
dept <- dbReadTable(conn, "DEPARTMENTS")

library(sqldf)
res_sqldf <- sqldf('SELECT department_name dept_name, count(*) cnt
                   FROM emp e LEFT OUTER JOIN dept d ON e.department_id=d.department_id
                   GROUP BY department_name')

res_sqldf$dept_name[is.na(res_sqldf$dept_name)] <- '소속부서(x)' 
res_sqldf$dept_name

bp <- barplot(res_sqldf$cnt,
              names.arg=res_sqldf$dept_name,
              main='부서별 사원 수',
              col=terrain.colors(length(res_sqldf$dept_name)),
              ylab='사원수(명)',
              ylim=c(0,50),
              las=2)
text(x=bp, y=res_sqldf$cnt, labels=res_sqldf$cnt, pos=3)


```
[문제172] R에서 오라클 접속한 후 부서별 인원수에 대한 막대그래프 그리세요.


library(RJDBC)
jdbcDriver <- JDBC(driverClass="oracle.jdbc.OracleDriver", classPath="C:/r/ojdbc6.jar")
conn <- dbConnect(jdbcDriver, "jdbc:oracle:thin:@localhost:1521/xe", "hr",  "hr")



df <- dbGetQuery(conn, "SELECT nvl(department_name,'소속부서(x)') dept_name, count(*) cnt
                        FROM employees e , departments d 
                        WHERE e.department_id = d.department_id(+)
                        GROUP BY nvl(department_name,'소속부서(x)')")

bp <- barplot(df$CNT,
              names.arg=df$DEPT_NAME,
              main='부서별 사원 수',
              col=terrain.colors(length(df$DEPT_NAME)),
              ylab='사원수(명)',
              ylim=c(0,50),
              las=2)

text(x=bp, y=df$CNT, labels=df$CNT, pos=3)




##ansi표준
df <- dbGetQuery(conn, "SELECT nvl(department_name,'소속부서(x)') dept_name, count(*) cnt
                        FROM employees e LEFT OUTER JOIN departments d 
                        ON e.department_id=d.department_id
                        GROUP BY nvl(department_name,'소속부서(x)')
                        ORDER BY cnt DESC")

bp <- barplot(df$CNT,
              names.arg=df$DEPT_NAME,
              main='부서별 사원 수',
              col=terrain.colors(length(df$DEPT_NAME)),
              ylab='사원수(명)',
              ylim=c(0,50),
              las=2)
text(x=bp, y=df$CNT, labels=df$CNT, pos=3)



emp <- dbGetQuery(conn, "select * from employees")
dept <- dbReadTable(conn, "DEPARTMENTS")  #DEPARMTNES를 소문자로 쓰면 오류가 걸릴 때가 있다.

library(sqldf)
res_sqldf <- sqldf('SELECT department_name dept_name, count(*) cnt
                   FROM emp e LEFT OUTER JOIN dept d ON e.department_id=d.department_id
                   GROUP BY department_name')

res_sqldf$dept_name[is.na(res_sqldf$dept_name)] <- '소속부서(x)' 
res_sqldf$dept_name

bp <- barplot(res_sqldf$cnt,
              names.arg=res_sqldf$dept_name,
              main='부서별 사원 수',
              col=terrain.colors(length(res_sqldf$dept_name)),
              ylab='사원수(명)',
              ylim=c(0,50),
              las=2)
text(x=bp, y=res_sqldf$cnt, labels=res_sqldf$cnt, pos=3)
