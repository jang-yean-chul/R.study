```{r}

sqldf("select employee_id, last_name from emp where length(last_name)>= 10")
```

[문제67] last_name의 글자의 수가 10이상인 사원의 employee_id, last_name 출력하세요.

sqldf("select employee_id, last_name from emp where length(last_name)>= 10")
```{r}

sqldf("select last_name, substr(last_name,1,3) from emp")
```

[문제68] last_name, last_name의 첫번째 철자부터 세번째 철자까지 함께 출력하세요.

sqldf("select last_name, substr(last_name,1,3) from emp")

```{r}
sqldf("select last_name, salary from emp where lower(substr(last_name,2,1)) = 'm'")
```

[문제69] last_name의 두번째 철자가 m  인 사원들의 last_name, salary를 출력하세요.

sqldf("select last_name, salary from emp where lower(substr(last_name,2,1)) = 'm'")

```{r}
sqldf("select last_name, salary from emp where lower(substr(last_name,2,1)) in ('g','m')")

```
[문제70] last_name의 두번째 철자가 m 또는 g 인 사원들의 last_name, salary를 출력하세요.

sqldf("select last_name, salary from emp where lower(substr(last_name,2,1)) in ('g','m')")
```{r}
sqldf("SELECT last_name, replace(salary, '0', '*')FROM emp")
```

[문제71] last_name, salary값을 화면에 출력할때 0은 * 로 출력하세요.

sqldf("SELECT last_name, replace(salary, '0', '*')FROM emp")
```{r}
sqldf("select last_name, salary, commission_pct ,case  when  commission_pct is null then salary * 12
                                                       else (salary * 12) + (salary * 12 * commission_pct) 
                                                       end
      from emp ")
```

[문제72]  x <- c(2,10,6,4,3,NA,7,9,1)  x변수에 NA가 있는지를 검사하세요.

PASS

[문제73] x 변수에 NA가 있는 인덱스 번호를 찾아 주세요.

PASS

[문제74] x 변수에 NA가 있으면 0으로 설정하세요

PASS

[문제75] last_name, salary, commission_pct, 
       commission_pct NA 면 salary * 12,
       아니면 (salary * 12) + (salary * 12 * commission_pct)을 수행하세요.

sqldf("select last_name, salary, commission_pct ,case  when  commission_pct is null then salary * 12
                                                       else (salary * 12) + (salary * 12 * commission_pct) 
                                                       end
      from emp ")

```{r}
sqldf("select power(6,9)")
```

[문제76] 6의 9승을 출력하세요 
sqldf("select power(6,9)")

```{r}
sqldf("select mod(10,3)")
```

[문제77] 10을 3으로 나눈 나머지값을 출력하세요 
sqldf("select mod(10,3)") #mod는 지원이안된다.
```{r}
sqldf("select last_name , salary *12 '연봉' from emp")
```

[문제78] last_name, salary에 12를  곱해서 출력하고 컬럼명이 한글로 연봉으로  데이터 프레임으로 출력하세요 

sqldf("select last_name , salary *12 '연봉' from emp")
```{r}
sqldf("select last_name, salary from emp order by salary desc")
```


[문제79] last_name과 연봉을 출력하는데 연봉이 높은것부터 출력하세요 

sqldf("select last_name, salary from emp order by salary desc")
```{r}
sqldf("select last_name, round(salary,-0) from emp order by salary desc")

```

[문제80] 위의 결과를 다시 출력하는데 round 함수를
        이용해서 아래와 같이 백단위에서 반올림되게 하세요. 
  
 4:  JONES 35700  ----->  36000

orderBy(~-연봉, data.frame(emp$LAST_NAME, 연봉 = round(emp$SALARY*12, -3)))

sqldf("select last_name, round(salary,-0) from emp order by salary desc")   #round 자릿수는 안먹힌다.
```{r}
sqldf("select last_name, hire_date from emp where hire_date = '2002-06-07'")
```

[문제81] 2002-06-07에 입사한 사원들의 last_name, hire_date를  출력하세요.

emp[as.Date("2002-06-07") == as.Date(emp$HIRE_DATE, format = "%y/%m/%d"),c("LAST_NAME", "HIRE_DATE")] 

sqldf("select last_name, hire_date from emp where hire_date = '2002-06-07'")
```{r}
sqldf("select last_name, (hire_date-sysdate) from emp")
```

[문제82] 사원의 last_name, 근무일수를 출력하세요.

data.frame(last_name = emp$LAST_NAME, Date = Sys.Date() - as.Date(emp$HIRE_DATE, format = "%y/%m/%d"),stringsAsFactors = F)

[문제83] 사원의 last_name, 입사한 요일을 출력하세요.

data.frame(last_name = emp$LAST_NAME, week = wday(emp$HIRE_DATE, label = T), stringsAsFactors = F)

[문제84] 오늘 날짜를 기준으로  100개월 되는 날짜의 요일을 출력하세요. 

wday(Sys.Date() + months(100), label = T)



[문제85] 사원의 last_name, 입사한 요일을 출력하세요. 
	단 요일별로 정렬을 수행해서 아래와 같이 출력하세요.


           name    day
1         Ernst 월요일
2       Vollman 월요일
3        Mallin 월요일
4        Ladwig 월요일
5     Cambrault 월요일
6        Greene 월요일
7          Ande 월요일
8         Banda 월요일
9         Kumar 월요일
10        Walsh 월요일
11    Hartstein 화요일
12         King 화요일
13       Hunold 화요일



           name    day
1         Grant 일요일
2     Pataballa 일요일
3          Khoo 일요일
4        Tobias 일요일
5         Weiss 일요일
6         Fripp 일요일
7        Landry 일요일
8      Atkinson 일요일
9           Seo 일요일
10       Vargas 일요일
11       Tucker 일요일
12       McEwen 일요일
13   Livingston 일요일
14        Geoni 일요일
15         Bull 일요일
16        Ernst 월요일

x<- orderBy(~d, data.frame(last_name = emp$LAST_NAME, week = format(as.Date(emp$HIRE_DATE,"%Y/%m/%d"), "%A"), d =format(as.Date(emp$HIRE_DATE,"%Y/%m/%d"), "%w"), stringsAsFactors = F))
x[,c("last_name", "week")]

[문제86] 새로운 변수에 last_name, salary,hire_date,
	       	2001 년도에 입사했으면 level를 A 
       		2002 년도에 입사했으면 level를 B  
	        2003 년도에 입사했으면 level를 C 
       		2004 년도에 입사했으면 level를 D 
       		나머지 년도는 E 가 입력해주세요.

data.frame(last_name = emp$LAST_NAME, salary = emp$SALARY, hire_date = emp$HIRE_DATE, level = ifelse(year(as.Date(emp$HIRE_DATE, "%Y/%m/%d")) == 2001, "A", ifelse(year(as.Date(emp$HIRE_DATE, "%Y/%m/%d")) == 2002, "B", ifelse(year(as.Date(emp$HIRE_DATE, "%Y/%m/%d")) == 2003 ,"C", ifelse(year(as.Date(emp$HIRE_DATE, "%Y/%m/%d")) == 2004, "D", "E")))))






[문제87] 최대월급을 출력하세요

max(emp$SALARY,na.rm = T)

[문제88] 직업이 ST_CLERK 인 사원들중에 최대월급을 출력하세요

max(emp[emp$JOB_ID == "ST_CLERK",c("SALARY")])

[문제89] 커미션이 NA 가 아닌 사원들의 월급중에서 최대값을 출력하세요

max(emp[!is.na(emp$COMMISSION_PCT),c("SALARY")])

> df <- data.frame(name=c('king', 'smith', 'jane', 'scott'), sql=c(96,NA,78,90), python=c(75,91,86,NA),stringsAsFactors=F)

> df
   name sql python
1  king  96     75
2 smith  NA     91
3  jane  78     86
4 scott  90     NA


[문제90] total 컬럼을 생성해서 sql과 python 의 총합을 구하세요.

#내 답안
df <- data.frame(name=c('king', 'smith', 'jane', 'scott'), sql=c(96,NA,78,90), python=c(75,91,86,NA),stringsAsFactors=F)
for(i in 1:nrow(df)) {c <- ifelse(is.na(df$sql),0,a)+ifelse(is.na(df$python),0,b)}
df<-cbind(df,c)
df

#선생님 답안
df <- data.frame(name=c('king', 'smith', 'jane', 'scott'), sql=c(96,NA,78,90), python=c(75,91,86,NA),stringsAsFactors=F)
total <- ifelse(is.na(df$sql),0,df$sql) + ifelse(is.na(df$python),0,df$python)
total
df<- cbind(df,total)

[문제91] 부서번호별로 급여에 총액을 출력하세요.
 
aggregate(SALARY~DEPARTMENT_ID, emp, sum)

[문제92] 부서번호, 직업별로 급여에 총액을 출력하세요.

aggregate(SALARY~DEPARTMENT_ID + JOB_ID, emp, sum)

[문제93] 부서번호별 최대월급을 출력하는데 최대월급이 높은것부터 출력하세요.

orderBy(~-SALARY,aggregate(SALARY~DEPARTMENT_ID, emp, sum))

[문제94] 직업별 인원수를 출력하세요.

aggregate(EMPLOYEE_ID~JOB_ID, emp, NROW)
aggregate(EMPLOYEE_ID~JOB_ID, emp, length)

[문제95] total 컬럼을 생성해서 sql과 python 의 합을 구하세요.
	 (단 apply함수를 이용하세요)

df <- data.frame(name=c('king', 'smith', 'jane', 'scott'), sql=c(96,NA,78,90), python=c(75,91,86,NA),stringsAsFactors=F)
df<- cbind(df, Total = apply(df[,c(2,3)],1,sum, na.rm = T)) 
df


[문제96] 부서, 직업별 급여 총액을 구하세요.
	 (aggregate,tapply)
	 
aggregate(emp$SALARY~emp$DEPARTMENT_ID + emp$JOB_ID,emp,sum)

tapply(emp$SALARY, list(emp$DEPARTMENT_ID,emp$JOB_ID), sum)   #이런 모양을 크로스 테이블이라고 한다.

[문제97] 96번문제의 결과를 x변수에 저장한 후  NA값들을 0으로 설정해주세요.

x<-tapply(emp$SALARY, list(emp$DEPARTMENT_ID,emp$JOB_ID), sum)
x[is.na(x) == T] <- 0
x

x<-tapply(emp$SALARY, list(emp$DEPARTMENT_ID,emp$JOB_ID), sum, default = 0)

[문제98] job_id, hire_date(년도4자리) 총액 급여를 구하시고  NA 대신에 0 으로 출력하세요.

x<- aggregate(emp$SALARY~emp$JOB_ID+format(as.Date(emp$HIRE_DATE, "%Y/%m/%d"), "%Y"),emp,sum,na.rm = T)
names(x) <- c("JOB_ID", "YEAR", "SALARY")
orderBy(~JOB_ID+YEAR,x)

tapply(emp$SALARY, list(format(as.Date(emp$HIRE_DATE), "%Y"),emp$JOB_ID), sum, default = 0)

[문제99] 부서별 인원수를 구하세요.(tapply 함수 사용)

tapply(emp$EMPLOYEE_ID,emp$JOB_ID,NROW)

[문제100] 1부터 100까지 짝수합, 홀수합을 tapply를 이용해서 구하세요.

s<- tapply(1:100, 1:100%%2 ==0, sum)
names(s) <- c("홀수", "짝수")   #F = 홀수  T = 짝수
s


