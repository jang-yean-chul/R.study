```{r}

z<- c(1:1000)

a<- as.vector(str_split(z[1000],""))

z<- c(1:1000)
z<- as.character(z)
x<- NULL

for(i in 1:length(z)){
  for(j in 1:length(strsplit(z[i],"")[[1]])){
    x<- append(x,strsplit(i,"")[[1]][j])
  }
  y<-
}
z<- as.character(z)
strsplit(z,"")
length(strsplit(z[i],"")[[1]])



10^length(a[[1]])



for (i in 1:length(a[[1]])) {
  
}



```

문제
앞뒤가 같은 수는 바로 쓴 값과 거꾸로 쓴 값이 같은 수이다. 다음과 같은 예를 들 수 있다.

1

44

101

2002

8972798

1111111111111

0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 22, 33, 44, 55, 66, 77, 88, 99, 101, 111, ... 과 같이, 0 이상의 앞뒤가 같은 수를 크기 순으로 나열할 때, n 번째 수를 계산하는 프로그램을 작성하라.

n은 1부터 시작하며 크기에는 제한이 없다.

입출력예
예 1) 1 => 0
예 2) 4 => 3
예 3) 30 => 202
예 4) 100 => 909
예 5) 30000 => 200000002
예 6) 1000000 => 90000000009


```{r}


data1<- c("90 88 78 65 80 94 69 72 83 64 95 68 87 69 82 91 63 70 81 67") 
data1<- gsub(" ", "\\',\\'",data1)
data1<- paste0("c(","'",data1,"'",")")
data1
data1<- c('90','88','78','65','80','94','69','72','83','64','95','68','87','69','82','91','63','70','81','67')

df<- data.frame(score=c("90점이상","80점이상~90점미만","70점이상~80점미만","60점이상~70점미만"),cnt=c(1:4))

df$cnt[df$score=="90점이상"]<- length(data1[data1>=90])
df$cnt[df$score=="80점이상~90점미만"]<- length(data1[data1>=80&data1<90])
df$cnt[df$score=="70점이상~80점미만"]<- length(data1[data1>=70&data1<80])
df$cnt[df$score=="60점이상~70점미만"]<- length(data1[data1>=60&data1<70])
df

score<- scan()

#선생님 답안
##score<- scan()   #콘솔 명령어 칸에서 해야한다.
##1: 90 88 78 65 80 94 69 72 83 64 95 68 87 69 82 91 63 70 81 67

round(length(score)^(1/3))  #구간의 갯수 정하기

(max(score)-min(score)) / 3  #구간의 범위 결정

table(score)


data<- c("90 88 78 65 80 94 69 72 83 64 95 68 87 69 82 91 63 70 81 67") 
data<- gsub(" ", "\\',\\'",data)
data<- paste0("c(","'",data,"'",")")
data
score<- c('90','88','78','65','80','94','69','72','83','64','95','68','87','69','82','91','63','70','81','67')


df<- data.frame(score=c("90점이상","80점이상~90점미만","70점이상~80점미만","60점이상~70점미만","전체"))
df1<- data.frame(cnt = c(rep(0,length(df$score))))
df<- cbind(df,df1)

for(i in score){
  if (i >=90){
    df$cnt[df$score=="90점이상"]<-df$cnt[df$score=="90점이상"]+1 
    df$cnt[df$score=="전체"]<-df$cnt[df$score=="전체"]+1
  }
  else if(i>=80 & i<90){
    df$cnt[df$score=="80점이상~90점미만"]<-df$cnt[df$score=="80점이상~90점미만"]+1 
    df$cnt[df$score=="전체"]<-df$cnt[df$score=="전체"]+1
  }
  else if(i>=70 & i<80){
    df$cnt[df$score=="70점이상~80점미만"]<-df$cnt[df$score=="70점이상~80점미만"]+1
    df$cnt[df$score=="전체"]<-df$cnt[df$score=="전체"]+1
  }
  else if(i>=60 & i<70){
    df$cnt[df$score=="60점이상~70점미만"]<-df$cnt[df$score=="60점이상~70점미만"]+1
    df$cnt[df$score=="전체"]<-df$cnt[df$score=="전체"]+1
  }
}
df


df2<- data.frame(상대도수=c(rep(0,length(df$score))) ,누적도수=c(rep(0,length(df$score))))

df<- cbind(df,df2)

df

# 상대도수 구하는 법
for(i in 1:length(df$상대도수)){
  df$상대도수[i]<- df$cnt[df$score[i]]/df$cnt[df$score=="전체"]
}

# 누적도수 구하는 법
for(i in 1:length(df$누적도수)){
  if(sum(df$cnt[df$score[1:i]]) <= df$cnt[df$score=="전체"]){
    df$누적도수[i]<- sum(df$cnt[df$score[1:i]])
  }
  else if(sum(df$cnt[df$score[1:i]]) > df$cnt[df$score=="전체"]){
    df$누적도수[i]<- NA
  }
}

df
```
[문제187] 조사된 데이터 값들이 있습니다. 도수분포표를 만드세요.

90 88 78 65 80 94 69 72 83 64 95 68 87 69 82 91 63 70 81 67 

              계급 도수
           90점이상    4
  80점이상~90점미만    6
  70점이상~80점미만    3
  60점이상~70점미만    7


#풀이

data<- c("90 88 78 65 80 94 69 72 83 64 95 68 87 69 82 91 63 70 81 67") 
data<- gsub(" ", "\\',\\'",data)
data<- paste0("c(","'",data,"'",")")
data
score<- c('90','88','78','65','80','94','69','72','83','64','95','68','87','69','82','91','63','70','81','67')


df<- data.frame(score=c("90점이상","80점이상~90점미만","70점이상~80점미만","60점이상~70점미만","전체"))
df1<- data.frame(cnt = c(rep(0,length(df$score))))
df<- cbind(df,df1)

for(i in score){
  if (i >=90){
    df$cnt[df$score=="90점이상"]<-df$cnt[df$score=="90점이상"]+1 
    df$cnt[df$score=="전체"]<-df$cnt[df$score=="전체"]+1
  }
  else if(i>=80 & i<90){
    df$cnt[df$score=="80점이상~90점미만"]<-df$cnt[df$score=="80점이상~90점미만"]+1 
    df$cnt[df$score=="전체"]<-df$cnt[df$score=="전체"]+1
  }
  else if(i>=70 & i<80){
    df$cnt[df$score=="70점이상~80점미만"]<-df$cnt[df$score=="70점이상~80점미만"]+1
    df$cnt[df$score=="전체"]<-df$cnt[df$score=="전체"]+1
  }
  else if(i>=60 & i<70){
    df$cnt[df$score=="60점이상~70점미만"]<-df$cnt[df$score=="60점이상~70점미만"]+1
    df$cnt[df$score=="전체"]<-df$cnt[df$score=="전체"]+1
  }
}
df


df2<- data.frame(상대도수=c(rep(0,length(df$score))) ,누적도수=c(rep(0,length(df$score))))

df<- cbind(df,df2)

df

# 상대도수 구하는 법
for(i in 1:length(df$상대도수)){
  df$상대도수[i]<- df$cnt[df$score[i]]/df$cnt[df$score=="전체"]
}

# 누적도수 구하는 법
for(i in 1:length(df$누적도수)){
  if(sum(df$cnt[df$score[1:i]]) <= df$cnt[df$score=="전체"]){
    df$누적도수[i]<- sum(df$cnt[df$score[1:i]])
  }
  else if(sum(df$cnt[df$score[1:i]]) > df$cnt[df$score=="전체"]){
    df$누적도수[i]<- NA
  }
}

df



##선생님꺼

score<- scan()  #콘솔창에서 실행해야한다.

##1 이러한 형태로 출력된다.
> score<- scan()
1:

##2 엔터엔터
> score<- scan()
1: 90 88 78 65 80 94 69 72 83 64 95 68 87 69 82 91 63 70 81 67
21:

##3 결과물
> score
 [1] 90 88 78 65 80 94 69 72 83 64 95 68 87 69 82 91 63 70 81 67
 
```{r}
score


ft_cut<- cut(score,
             breaks= c(60,70,80,90,101),
             ##60<=score <70,70<=score <80,80<=score <90,90<=score <101 을 의미한다.
             right = F,  #T로 바꾸게 되면 거꾸로 된다.
             labels = c("60점이상~70점미만","70점이상~80점미만","80점이상~90점미만","90점이상"))

ft_cut
ft_table<- table(ft_cut)  #연속형 자료를 명목형 자료로 바꾸고 싶을 때 사용

prop.table(ft_table)  #상대도수 만드는 명령어

ft_table_prop<- cbind(ft_table,prop.table(ft_table))
data.frame(ft_table_prop)
```
 
cut(score,
    breaks,
    right = F,
    labels = c("") #계급 값
    )
    
```{r}

## for/if 함수 사용
id<- c(100:110)
score<- scan()

#> score<- scan()
#1: 63 93 72 80 54 88 68 87 66 98 70
#12:

id
score

student<- data.frame(id= id, score = score,grade =id)
student

for(i in student$id){
  if (student$score[student$id == i]<60){
    student$grade[student$id==i]<- 'F'
  }
  else if (60<= student$score[student$id == i] & student$score[student$id == i]<70){
    student$grade[student$id==i]<- 'D'
  }
  else if (70<= student$score[student$id == i] & student$score[student$id == i]<80){
    student$grade[student$id==i]<- 'C'
  }
  else if (80<= student$score[student$id == i] & student$score[student$id == i]<90){
    student$grade[student$id==i]<- 'B'
  }
  else if (90<= student$score[student$id == i]){
    student$grade[student$id==i]<- 'A'
  }
}
student


## cut 함수 사용
id<- c(100:110)
score<- scan()

#> score<- scan()
#1: 63 93 72 80 54 88 68 87 66 98 70
#12:

grade_cut<- cut(score,
                breaks = c(0,60,70,80,90,101),
                right = F,
                labels = c('F','D','C','B','A'))

student<- cbind(id,score,data.frame(grade_cut))



```
[문제187] 학생들의 시험 성적입니다. grade값을 만들어 주세요.

        id      score   grade
------------  --------  ------      
       100         63
       101         93
       102         72
       103         80
       104         54
       105         88
       106         68
       107         87
       108         66
       109         98
       110         70
       
       
score < 60     : F
60<= score <70 : D
70<= score <80 : C
80<= score <90 : B
90<= score     : A


## for/if 함수 사용
id<- c(100:110)
score<- scan()

#> score<- scan()
#1: 63 93 72 80 54 88 68 87 66 98 70
#12:

id
score

student<- data.frame(id= id, score = score,grade =id)
student

for(i in student$id){
  if (student$score[student$id == i]<60){
    student$grade[student$id==i]<- 'F'
  }
  else if (60<= student$score[student$id == i] & student$score[student$id == i]<70){
    student$grade[student$id==i]<- 'D'
  }
  else if (70<= student$score[student$id == i] & student$score[student$id == i]<80){
    student$grade[student$id==i]<- 'C'
  }
  else if (80<= student$score[student$id == i] & student$score[student$id == i]<90){
    student$grade[student$id==i]<- 'B'
  }
  else if (90<= student$score[student$id == i]){
    student$grade[student$id==i]<- 'A'
  }
}
student


## cut 함수 사용
id<- c(100:110)
score<- scan()

#> score<- scan()
#1: 63 93 72 80 54 88 68 87 66 98 70
#12:

grade_cut<- cut(score,
                breaks = c(0,60,70,80,90,101),
                right = F,
                labels = c('F','D','C','B','A'))

student<- cbind(id,score,data.frame(grade_cut))

```{r}
score<- scan()

#> score<- scan()
#1: 90 88 78 65 80 94 69 72 83 64 95 68 87 69 82 91 63 70 81 67
#21:

help("hist")

min(score)
max(score)
hist(x=score,   # x = 히스토그램을 위한 벡터 데이터
     breaks = seq(60,101,by=10),   #계급 최대값,최소값 ,by= 구간 단위
     right = F,
     col = rainbow(4) )  # col = rainbow(4) : 구간이 4개라서)

```


```{r}
w<- read.table("c:/r/weight.txt")
w<- as.matrix(w)
dim(w)<- c(dim(w)[1]*dim(w)[2],1)
w

w_t<- table(w)
w_t

w_m<- as.matrix(w_t)
w_m

w_df<- data.frame(weight = rownames(w_m),cnt = w_m[,1])
rownames(w_df) <- NULL
w_df

min(w)
max(w)

#계급의 수 결정 = 4
round(length(w)^(1/3))

#구간 결정 = 10
(max(w) - min(w)) / 4

w_cut<- cut(w[,1],
            breaks = c(0,60,70,80,90,200),
            right = F,
            labels = c("60미만","60이상 70미만","70이상 80미만","80이상 90미만","90이상"))
w_cut
w_t<- table(w_cut)

w_df<- data.frame(w_t)
w_df
data.frame(prop.table(w_t))[,2]

w_df_final<- cbind(w_df,data.frame(prop.table(w_t))[,2])

w_df_final

colnames(w_df_final)<- c('계급','도수','상대도수')
w_df_final

w_sum<-data.frame(누적도수=c(1:length(w_df_final$도수)))
w_df_final<-cbind(w_df_final,w_sum)

for(i in 1:length(w_df_final$도수)){
    w_df_final$누적도수[i]<- sum(w_df_final$도수[df$weight[1:i]])
}
w_df_final



#풀이  for/if 사용
data<- read.table("c:/r/weight.txt")
data<- as.matrix(data)
dim(data)<- c(dim(data)[1]*dim(data)[2],1)
data<- data[,1]
data



df<- data.frame(weight=c("60미만","60이상 70미만","70이상 80미만","80이상 90미만","90이상","전체"))
df1<- data.frame(cnt = c(rep(0,length(df$weight))))
df<- cbind(df,df1)
df

for(i in data){
  if (i >= 90){
    df$cnt[df$weight=="90이상"]<-df$cnt[df$weight=="90이상"]+1 
    df$cnt[df$weight=="전체"]<-df$cnt[df$weight=="전체"]+1
  }
  else if(i>=80 & i<90){
    df$cnt[df$weight=="80이상 90미만"]<-df$cnt[df$weight=="80이상 90미만"]+1 
    df$cnt[df$weight=="전체"]<-df$cnt[df$weight=="전체"]+1
  }
  else if(i>=70 & i<80){
    df$cnt[df$weight=="70이상 80미만"]<-df$cnt[df$weight=="70이상 80미만"]+1
    df$cnt[df$weight=="전체"]<-df$cnt[df$weight=="전체"]+1
  }
  else if(i>=60 & i<70){
    df$cnt[df$weight=="60이상 70미만"]<-df$cnt[df$weight=="60이상 70미만"]+1
    df$cnt[df$weight=="전체"]<-df$cnt[df$weight=="전체"]+1
  }
  else if(i<60){
    df$cnt[df$weight=="60미만"]<-df$cnt[df$weight=="60미만"]+1
    df$cnt[df$weight=="전체"]<-df$cnt[df$weight=="전체"]+1
  }
}
df


df2<- data.frame(상대도수=c(rep(0,length(df$weight))) ,누적도수=c(rep(0,length(df$weight))))

df<- cbind(df,df2)

df

# 상대도수 구하는 법
for(i in 1:length(df$상대도수)){
  df$상대도수[i]<- df$cnt[df$weight[i]]/df$cnt[df$weight=="전체"]
}

# 누적도수 구하는 법
for(i in 1:length(df$누적도수)){
  if(sum(df$cnt[df$weight[1:i]]) <= df$cnt[df$weight=="전체"]){
    df$누적도수[i]<- sum(df$cnt[df$weight[1:i]])
  }
  else if(sum(df$cnt[df$weight[1:i]]) > df$cnt[df$weight=="전체"]){
    df$누적도수[i]<- NA
  }
}
df


help(hist)
hist(x=data,   
     breaks = seq(50,101,by=10), 
     right = F,
     col = rainbow(5),
     xlab = "몸무게",
     ylab = "숫자(명)",
     main = "몸무게별 사람 수")


```
[문제188] 학생들의 몸무게 자료를 이용해서 도수분포표,그래프를 생성하세요.
#풀이  for/if 사용
data<- read.table("c:/r/weight.txt")
data<- as.matrix(data)
dim(data)<- c(dim(data)[1]*dim(data)[2],1)
data<- data[,1]
data



df<- data.frame(weight=c("60미만","60이상 70미만","70이상 80미만","80이상 90미만","90이상","전체"))
df1<- data.frame(cnt = c(rep(0,length(df$weight))))
df<- cbind(df,df1)
df

for(i in data){
  if (i >= 90){
    df$cnt[df$weight=="90이상"]<-df$cnt[df$weight=="90이상"]+1 
    df$cnt[df$weight=="전체"]<-df$cnt[df$weight=="전체"]+1
  }
  else if(i>=80 & i<90){
    df$cnt[df$weight=="80이상 90미만"]<-df$cnt[df$weight=="80이상 90미만"]+1 
    df$cnt[df$weight=="전체"]<-df$cnt[df$weight=="전체"]+1
  }
  else if(i>=70 & i<80){
    df$cnt[df$weight=="70이상 80미만"]<-df$cnt[df$weight=="70이상 80미만"]+1
    df$cnt[df$weight=="전체"]<-df$cnt[df$weight=="전체"]+1
  }
  else if(i>=60 & i<70){
    df$cnt[df$weight=="60이상 70미만"]<-df$cnt[df$weight=="60이상 70미만"]+1
    df$cnt[df$weight=="전체"]<-df$cnt[df$weight=="전체"]+1
  }
  else if(i<60){
    df$cnt[df$weight=="60미만"]<-df$cnt[df$weight=="60미만"]+1
    df$cnt[df$weight=="전체"]<-df$cnt[df$weight=="전체"]+1
  }
}
df


df2<- data.frame(상대도수=c(rep(0,length(df$weight))) ,누적도수=c(rep(0,length(df$weight))))

df<- cbind(df,df2)

df

# 상대도수 구하는 법
for(i in 1:length(df$상대도수)){
  df$상대도수[i]<- df$cnt[df$weight[i]]/df$cnt[df$weight=="전체"]
}

# 누적도수 구하는 법
for(i in 1:length(df$누적도수)){
  if(sum(df$cnt[df$weight[1:i]]) <= df$cnt[df$weight=="전체"]){
    df$누적도수[i]<- sum(df$cnt[df$weight[1:i]])
  }
  else if(sum(df$cnt[df$weight[1:i]]) > df$cnt[df$weight=="전체"]){
    df$누적도수[i]<- NA
  }
}
df

##히스토그램 그리기

help(hist)
hist(x=data,   
     breaks = seq(50,101,by=10), 
     right = F,
     col = rainbow(5),
     xlab = "몸무게",
     ylab = "숫자(명)",
     main = "몸무게별 사람 수")

###2 
##그냥 다루기
w<- read.table("c:/r/weight.txt")
w<- as.matrix(w)
dim(w)<- c(dim(w)[1]*dim(w)[2],1)
w

w_t<- table(w)
w_t

w_m<- as.matrix(w_t)
w_m

w_df<- data.frame(weight = rownames(w_m),cnt = w_m[,1])
rownames(w_df) <- NULL
w_df

min(w)
max(w)

#계급의 수 결정 = 4
round(length(w)^(1/3))

#구간 결정 = 10
(max(w) - min(w)) / 4

w_cut<- cut(w[,1],
            breaks = c(0,60,70,80,90,200),
            right = F,
            labels = c("60미만","60이상 70미만","70이상 80미만","80이상 90미만","90이상"))
w_cut
w_t<- table(w_cut)

w_df<- data.frame(w_t)
w_df
data.frame(prop.table(w_t))[,2]

w_df_final<- cbind(w_df,data.frame(prop.table(w_t))[,2])

w_df_final

colnames(w_df_final)<- c('계급','도수','상대도수')
w_df_final

w_sum<-data.frame(누적도수=c(1:length(w_df_final$도수)))
w_df_final<-cbind(w_df_final,w_sum)

for(i in 1:length(w_df_final$도수)){
    w_df_final$누적도수[i]<- sum(w_df_final$도수[df$weight[1:i]])
}
w_df_final
```{r}

weight <- read.table("c:/r/weight.txt")
str(weight)
weight <- as.matrix(weight)
dim(weight) <- c(50,1)
weight <- as.data.frame(weight)
max(weight)
min(weight)
w <- weight[,1]
w_ct <- cut(w,breaks=c(50,60,70,80,90,101),right=FALSE,include.lowest = FALSE,
   labels=c("50이상~60미만","60이상~70미만","70이상~80미만","80이상~90미만","90이상"))
w_ct
w_t <- table(w_ct)
prop.table(w_t)
c_df <- cbind(w_t,prop.table(w_t))

rownames(c_df)
colnames(c_df) <- c("도수","상대도수")
c_df
hist(x=weight[,1], 
     main="학생들의 몸무게",
     xlab="몸무게",
     ylab="인원수",
     ylim=c(0,25),
     col=rainbow(5),
     breaks=seq(50,100,by=10))


colnames(weight)<- 'freq'

ggplot(data=weight,aes(x=freq))+
  geom_histogram(binwidth = 10, aes(fill=..count..))


```
[문제188] 학생들의 몸무게 자료를 이용해서 도수분포표,그래프를 생성하세요.


#선생님!
weight <- read.table("c:/r/weight.txt")
str(weight)
weight <- as.matrix(weight)
dim(weight) <- c(50,1)
weight <- as.data.frame(weight)
max(weight)
min(weight)
w <- weight[,1]
w_ct <- cut(w,breaks=c(50,60,70,80,90,101),right=FALSE,include.lowest = FALSE,
   labels=c("50이상~60미만","60이상~70미만","70이상~80미만","80이상~90미만","90이상"))
w_ct
w_t <- table(w_ct)
prop.table(w_t)
c_df <- cbind(w_t,prop.table(w_t))

rownames(c_df)
colnames(c_df) <- c("도수","상대도수")
c_df
hist(x=weight[,1], 
     main="학생들의 몸무게",
     xlab="몸무게",
     ylab="인원수",
     ylim=c(0,25),
     col=rainbow(5),
     breaks=seq(50,100,by=10))

library(ggplot2)

colnames(weight)<- 'freq'

ggplot(data=weight,aes(x=freq))+
  geom_histogram(binwidth = 10, aes(fill=..count..))

```{r}

weight <- read.table("c:/r/weight.txt")

weight <- as.matrix(weight)

dim(weight) <- c(50,1)

weight <- as.data.frame(weight)

colnames(weight)<- 'freq'

weight

##Stem and Leaf Diagram(줄기잎 그림)

stem(weight$freq)


```
##Stem and Leaf Diagram(줄기잎 그림)

stem(weight$freq)
```{r}
member<- c('김승혁', '강욥', '강현주', '공석1', '곽상욱', '공석2', '김동률', '김동일', '김명중', '김선경', '김성현', '김태효', '공석3', '문광표', '민다혜', '박대원', '공석4', '안장현', '유수원', '이대곤', '이웅기', '장연철', '정진유', '공석5', '진주리', '공석6', '최다혜', '최미리', '황윤상', '공석7')


sit<- data.frame(a=c(1:5),b=c(6:10),c=c(11:15),d=c(16:20),e=c(21:25),f=c(26:30))

rownames(sit)<- c(1,2,3,4,5)

for(i in c(1:5)){
  for(j in c(1:6)){
    sit[i,j]<- sample(member,1)
    member<- member[member != sit[i,j]]
  }  
}

member

sit
```



